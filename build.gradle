plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.4'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'

	//JPA
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	//MapStruct
	implementation 'org.mapstruct:mapstruct:1.5.5.Final'

	//Auth0 & Security
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

	// Validación de JWT (opcional, si manejas tokens manualmente):
	//implementation 'com.auth0:java-jwt:4.4.0'

	//MySQL
	runtimeOnly 'com.mysql:mysql-connector-j'

	//OpenAPI → http://localhost:8080/swagger-ui.html
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.5.0'

	//Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	//developmentOnly 'org.springframework.boot:spring-boot-docker-compose'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}
